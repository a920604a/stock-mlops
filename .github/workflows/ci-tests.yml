name: CI Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install QA tools
        run: pip install isort black pylint

      - name: Run quality checks
        run: make quality_checks

  unit-test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r backend/requirements.txt

      - name: Run unit tests
        run: pytest -v 


  integration-test:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker compose version

      - name: Init volume folders
        run: |
          mkdir -p db/mlflow_db db/oltp db/model_meta_db db/olap
          mkdir -p data/mlflow_artifacts data/prometheus_data data/minio

      - name: Start all services
        run: docker compose up -d --build

      - name: Wait for services to be ready (all core services)
        run: |
          echo "⏳ 等待所有服務啟動中..."

          wait_for_http_service() {
            local name="$1"
            local url="$2"
            for i in {1..30}; do
              if curl -s -L --fail "$url" > /dev/null; then
                echo "✅ $name is up: $url"
                return 0
              fi
              echo "⏳ Waiting for $name... ($i/30)"
              sleep 2
            done
            echo "❌ $name did not become ready: $url"
            return 1
          }

          wait_for_redis() {
            for i in {1..30}; do
              if docker compose exec redis redis-cli ping | grep -q PONG; then
                echo "✅ Redis is up"
                return 0
              fi
              echo "⏳ Waiting for Redis... ($i/30)"
              sleep 2
            done
            echo "❌ Redis did not become ready"
            return 1
          }

          wait_for_postgres() {
            local name="$1"
            local service="$2"
            for i in {1..30}; do
              if docker compose exec "$service" pg_isready -U user > /dev/null 2>&1; then
                echo "✅ $name is up"
                return 0
              fi
              echo "⏳ Waiting for $name... ($i/30)"
              sleep 2
            done
            echo "❌ $name did not become ready"
            return 1
          }

          # HTTP 服務
          wait_for_http_service "Backend"     http://localhost:8000/docs
          wait_for_http_service "MLflow"      http://localhost:5010
          wait_for_http_service "ClickHouse"  http://localhost:8123/ping
          wait_for_http_service "MinIO"       http://localhost:9001
          wait_for_http_service "Grafana"     http://localhost:3002
          wait_for_http_service "Prometheus"  http://localhost:9090

          # Redis
          wait_for_redis

          # PostgreSQL
          wait_for_postgres "Raw DB" raw_db
          wait_for_postgres "Model Meta DB" model_meta_db
          wait_for_postgres "MLflow DB" mlflow-db

          echo "✅ 所有服務啟動完成"

      - name: Run integration tests
        run: make integration_test

      - name: Tear down services
        if: always()
        run: docker compose down --volumes
