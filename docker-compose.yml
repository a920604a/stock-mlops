services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: ../Dockerfile.frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend

  backend:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - mlflow
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/stocks
      - REDIS_HOST=redis
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./backend:/app


  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: stocks
    ports:
      - "5412:5432"
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data
      - ./db/init-scripts:/docker-entrypoint-initdb.d

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.10.0
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlruns
    ports:
      - "5010:5000"
    volumes:
      - ./mlruns:/mlruns

  prometheus:
    image: prom/prometheus
    user: "1000"
    volumes:
      - ./monitor/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus_data:/prometheus
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana-enterprise
    user: "472"
    ports:
      - "3001:3000"
    volumes:
      - ./monitor/dashboards:/opt/grafana/dashboards
    restart: always