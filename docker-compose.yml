services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: ../Dockerfile.frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend

  backend1:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    container_name: backend1
    ports:
      - "8001:8000"
    depends_on:
      - raw_db
      - redis
      - mlflow
    environment:
      - DATABASE_URL=postgresql://user:password@model_meta_db:5432/stocks
      - REDIS_HOST=redis
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PASSWORD=
      - CLICKHOUSE_DB=default
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=mlflow123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    volumes:
      - ./backend:/app
    networks:
      - monitor-net

  backend2:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    container_name: backend2
    ports:
      - "8002:8000"
    depends_on:
      - raw_db
      - redis
      - mlflow
    environment:
      - DATABASE_URL=postgresql://user:password@model_meta_db:5432/stocks
      - REDIS_HOST=redis
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PASSWORD=
      - CLICKHOUSE_DB=default
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=mlflow123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    volumes:
      - ./backend:/app
    networks:
      - monitor-net

  raw_db: # save raw data OLTP
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: stocks
    ports:
      - "5412:5432"
    volumes:
      - ./db/oltp:/var/lib/postgresql/data
    networks:
      - monitor-net

  model_meta_db: # save model meta data
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: stocks
    ports:
      - "5411:5432"
    volumes:
      - ./db/model_meta_db:/var/lib/postgresql/data
      - ./db/init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - monitor-net

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - monitor-net

  celery:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    container_name: celery
    command: celery -A celery_worker.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://user:password@model_meta_db:5432/stocks
      - REDIS_HOST=redis
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_PASSWORD=
      - CLICKHOUSE_DB=default
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=mlflow123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    depends_on:
      - redis
      - backend1
      - backend2
    volumes:
      - ./backend:/app
    networks:
      - monitor-net

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    depends_on:
      - mlflow-db
    environment:
      AWS_ACCESS_KEY_ID: mlflow
      AWS_SECRET_ACCESS_KEY: mlflow123
      MLFLOW_ARTIFACT_ROOT: s3://mlflow-artifacts
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri postgresql://mlflow:mlflow@mlflow-db:5432/mlflow
      --default-artifact-root s3://mlflow-artifacts
    ports:
      - "5010:5000"
    networks:
      - monitor-net

  mlflow-db:
    image: postgres:15
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    volumes:
      - ./db/mlflow_db:/var/lib/postgresql/data
    ports:
      - "5422:5432"
    networks:
      - monitor-net

  clickhouse:
    image: clickhouse/clickhouse-server:23.3
    ports:
      - "8123:8123" # HTTP 接口 (可用 DBeaver 連線) , http://localhost:8123/play, http://localhost:8123/dashboard
      - "9000:9000" # Native TCP 協議
    volumes:
      - ./db/olap/clickhouse_data:/var/lib/clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - monitor-net

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9111:9000" # API
      - "9001:9001" # 控制台, 進入 MinIO web 控制台（http://localhost:9001）登入後： 建立一個 bucket 名為：mlflow-artifacts
    environment:
      - MINIO_ROOT_USER=mlflow
      - MINIO_ROOT_PASSWORD=mlflow123
    volumes:
      - ./data/minio:/data
    networks:
      - monitor-net
  init-minio:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: /bin/sh
    command: /scripts/init_minio.sh
    environment:
      MINIO_ROOT_USER: mlflow
      MINIO_ROOT_PASSWORD: mlflow123
    volumes:
      - ./scripts/init_minio.sh:/scripts/init_minio.sh:ro
    networks:
      - monitor-net

networks:
  monitor-net:
    external: false
